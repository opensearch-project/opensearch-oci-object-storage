
plugins {
    id 'nebula.ospackage' version "8.3.0"
    id 'checkstyle'
    id "io.freefair.lombok" version "6.4.0"
    id 'jacoco'
    id 'java'
    id 'java-library'
}

repositories {
    mavenLocal()
    maven { url "https://aws.oss.sonatype.org/content/repositories/snapshots" }
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
}

allprojects {
    version = '2.5.0'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'idea'
    apply plugin: 'jacoco'

    ext {
        opensearch_version = System.getProperty("opensearch.version", "2.5.0")
        sdk_version = "3.3.0"
        jackson_version = "2.14.1"
    }

    repositories {
        mavenLocal()
        maven { url "https://aws.oss.sonatype.org/content/repositories/snapshots" }
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        implementation gradleApi()
        implementation localGroovy()
        implementation "net.jodah:failsafe:2.4.0"
        implementation "com.google.guava:guava:31.1-jre"
        implementation "org.apache.commons:commons-lang3:3.9"
        implementation "commons-io:commons-io:2.7"
        implementation("com.oracle.oci.sdk:oci-java-sdk-objectstorage:${sdk_version}")
        implementation("com.oracle.oci.sdk:oci-java-sdk-objectstorage-generated:${sdk_version}")
        implementation("com.oracle.oci.sdk:oci-java-sdk-objectstorage-extensions:${sdk_version}")
        implementation("com.oracle.oci.sdk:oci-java-sdk-common-httpclient:${sdk_version}")
        implementation("com.oracle.oci.sdk:oci-java-sdk-common:${sdk_version}")
        implementation("com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:${jackson_version}")
        implementation("com.fasterxml.jackson.jaxrs:jackson-jaxrs-base:${jackson_version}")
        implementation("com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${jackson_version}")

        compileOnly "org.opensearch:opensearch:${opensearch_version}"

        // Fix dependency collision with opensearch
        implementation('com.fasterxml.jackson.module:jackson-module-jaxb-annotations') {
            version {
                strictly "${jackson_version}"
            }
        }
        implementation("com.fasterxml.jackson.core:jackson-annotations:${jackson_version}") {
            force = true
        }
        implementation("com.fasterxml.jackson.core:jackson-databind:${jackson_version}") {
            force = true
        }
        implementation("com.fasterxml.jackson.core:jackson-core:${jackson_version}") {
            force = true
        }
        compileOnly("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jackson_version}") {
            force = true
        }

        implementation('commons-codec:commons-codec:1.15') {
            force = true
        }

        implementation('org.apache.httpcomponents:httpcore') {
            version({
                strictly('4.4.15')
            })
        }

        // Test dependencies
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.0'
        testImplementation 'org.junit.jupiter:junit-jupiter-params:5.5.0'
        testImplementation 'org.assertj:assertj-core:3.18.1'
    }

    compileJava {
        options.compilerArgs.addAll(["-processor", 'lombok.launch.AnnotationProcessorHider$AnnotationProcessor'])
        doFirst {
            // TODO: do not fail build on warnings, need to fix all compiler warnings
            options.compilerArgs.remove('-Werror')
            // TODO: need to fix all java doc format
            options.compilerArgs.remove('-Xdoclint:all')
        }
    }
}
